{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/dashboard/chart/chart.component.css","webpack:///./src/app/dashboard/chart/chart.component.html","webpack:///./src/app/dashboard/chart/chart.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/form/form.component.css","webpack:///./src/app/dashboard/form/form.component.html","webpack:///./src/app/dashboard/form/form.component.ts","webpack:///./src/app/dashboard/grid/grid.component.css","webpack:///./src/app/dashboard/grid/grid.component.html","webpack:///./src/app/dashboard/grid/grid.component.ts","webpack:///./src/app/dashboard/nav-bar/nav-bar.component.css","webpack:///./src/app/dashboard/nav-bar/nav-bar.component.html","webpack:///./src/app/dashboard/nav-bar/nav-bar.component.ts","webpack:///./src/app/dashboard/state/index.ts","webpack:///./src/app/dashboard/state/student-data.service.ts","webpack:///./src/app/dashboard/state/student.model.ts","webpack:///./src/app/dashboard/state/student.query.ts","webpack:///./src/app/dashboard/state/student.service.ts","webpack:///./src/app/dashboard/state/student.store.ts","webpack:///./src/app/login/login-data.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/login/state/index.ts","webpack:///./src/app/login/state/session.model.ts","webpack:///./src/app/login/state/session.query.ts","webpack:///./src/app/login/state/session.store.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AuthGuard } from './auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: '/dashboard',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, NgZone } from '@angular/core';\nimport { akitaDevtools } from '@datorama/akita';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private ngZone: NgZone) {\n\n    if (!environment.production) {\n      akitaDevtools(ngZone);\n    }\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChartModule } from 'primeng/chart';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavBarComponent } from './dashboard/nav-bar/nav-bar.component';\nimport { ChartComponent } from './dashboard/chart/chart.component';\nimport { GridComponent } from './dashboard/grid/grid.component';\nimport { FormComponent } from './dashboard/form/form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    NavBarComponent,\n    ChartComponent,\n    GridComponent,\n    FormComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    ChartModule,\n    TableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SessionQuery } from './login/state/index';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private sessionQuery: SessionQuery\n  ) { }\n\n  canActivate(): boolean {\n    if (this.sessionQuery.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-sm\\\">\\n  <div class=\\\"card rounded-0\\\" style=\\\"width:82.45rem;\\\">\\n    <div class=\\\"card-header\\\">\\n      Chart\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"chart-container\\\" width=\\\"\\\">\\n        <p-chart type=\\\"bar\\\" [data]=\\\"data\\\" width=\\\"90vw\\\" height=\\\"40vh\\\"></p-chart>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UIChart } from 'primeng/chart';\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ChartComponent implements OnInit {\n\n  @ViewChild(UIChart) uiChart: UIChart;\n  @Input() studentsGraphData$: Observable<{ [key: string]: Array<string | number> }>;\n  data: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.studentsGraphData$.subscribe(({ names, quarterly, halfyearly, annual }) => {\n      this.data = {\n        labels: names,\n        datasets: [\n          {\n            label: 'Quarterly',\n            backgroundColor: '#42A5F5',\n            borderColor: '#1E88E5',\n            data: quarterly\n          },\n          {\n            label: 'Halfyearly',\n            backgroundColor: '#9CCC65',\n            borderColor: '#7CB342',\n            data: halfyearly\n          },\n          {\n            label: 'Annual',\n            backgroundColor: 'red',\n            borderColor: 'red',\n            data: annual\n          }\n        ]\n      };\n      console.log(this.data);\n      this.uiChart.refresh();\n    });\n  }\n\n}\n","module.exports = \".row {\\r\\n    padding-bottom: 6px;\\r\\n}\\r\\n\\r\\n.chart-container {\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    height: 300px;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm\\\">\\r\\n            <app-nav-bar></app-nav-bar>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <app-chart [studentsGraphData$]=\\\"studentQuery.studentsGraphData$\\\"></app-chart>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <app-grid [students$]=\\\"studentQuery.students$\\\" (add)=\\\"onAdd()\\\" (edit)=\\\"onEdit($event)\\\" (delete)=\\\"onDelete($event)\\\"></app-grid>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <app-form *ngIf=\\\"formData\\\" [formData]=\\\"formData\\\" (updateformData)=\\\"updateformData($event)\\\"></app-form>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- <p-chart type=\\\"bar\\\" [data]=\\\"data\\\"></p-chart> -->\"","import { Component, OnInit } from '@angular/core';\nimport { createStudent, StudentService, StudentQuery, Student } from './state/index';\nimport { ID } from '@datorama/akita';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  formData: Student;\n\n  constructor(\n    private studentService: StudentService,\n    public studentQuery: StudentQuery\n  ) { }\n\n  ngOnInit() {\n    this.studentService.getStudents().subscribe();\n  }\n  onAdd() {\n    this.nullifyFormData();\n    setTimeout(() => this.formData = createStudent({}));\n  }\n  onEdit(id: ID) {\n    this.nullifyFormData();\n    setTimeout(() => this.formData = this.studentQuery.getStudent(id));\n  }\n\n  onDelete(id: ID) {\n    this.nullifyFormData();\n    if (confirm('Are you sure to delete?')) {\n      this.studentService.deleteStudent(id);\n    }\n  }\n\n  updateformData(student: Student) {\n    this.studentService.updateStudent(student);\n    this.nullifyFormData();\n  }\n\n  nullifyFormData() {\n    this.formData = null;\n  }\n\n}\n","module.exports = \"span.mandatory {\\r\\n    color: red;\\r\\n    padding-left: 2px;\\r\\n}\"","module.exports = \"<div class=\\\"col-sm\\\">\\n  <div class=\\\"card rounded-0\\\" style=\\\"width:82.45rem;\\\">\\n    <div class=\\\"card-header\\\">\\n      {{studentName ? 'Student -' + studentName : 'Form'}}\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div>\\n        <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label><span class=\\\"mandatory\\\">*</span>\\n            <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\n          </div>\\n          <fieldset class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <legend class=\\\"col-form-label col-sm-2 pt-0\\\">Sex<span class=\\\"mandatory\\\">*</span></legend>\\n              <div class=\\\"col-sm-10\\\">\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"sex\\\" id=\\\"inlineRadio1\\\" value=\\\"Male\\\" formControlName=\\\"sex\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"inlineRadio1\\\">Male</label>\\n                </div>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"sex\\\" id=\\\"inlineRadio2\\\" value=\\\"Female\\\" formControlName=\\\"sex\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">Female</label>\\n                </div>\\n              </div>\\n            </div>\\n          </fieldset>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"standard\\\">Standard</label><span class=\\\"mandatory\\\">*</span>\\n            <select id=\\\"standard\\\" class=\\\"form-control\\\" formControlName=\\\"standard\\\">\\n              <option selected>Choose...</option>\\n              <option *ngFor=\\\"let std of [1,2,3,4,5,6,7,8,9,10,11,12]\\\" [value]=\\\"std\\\">{{std}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"quarterly\\\">Quarterly %</label>\\n            <input type=\\\"number\\\" class=\\\"form-control rounded-0\\\" id=\\\"quarterly\\\" placeholder=\\\"Quarterly\\\" formControlName=\\\"quarterlyScore\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"halfyearly\\\">Halfyearly %</label>\\n            <input type=\\\"number\\\" class=\\\"form-control rounded-0\\\" id=\\\"halfyearly\\\" placeholder=\\\"Halfyearly\\\" formControlName=\\\"halfyearlyScore\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"annual\\\">Annual %</label>\\n            <input type=\\\"number\\\" class=\\\"form-control rounded-0\\\" id=\\\"annual\\\" placeholder=\\\"Annual\\\" formControlName=\\\"annualScore\\\">\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-sm-10\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-link\\\" [disabled]=\\\"formGroup.invalid\\\">Save</button>\\n              &nbsp;|&nbsp;\\n              <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"resetForm()\\\" [disabled]=\\\"!formGroup.dirty\\\">Reset</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Student } from '../state/index';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  @Input() formData: Student;\n  formGroup: FormGroup;\n  @Output() updateformData: EventEmitter<Student> = new EventEmitter<Student>();\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.fb.group({\n      id: [this.formData.id, Validators.required],\n      name: [this.formData.name, Validators.required],\n      sex: [this.formData.sex, Validators.required],\n      standard: [this.formData.standard, Validators.required],\n      quarterlyScore: [this.formData.quarterlyScore],\n      halfyearlyScore: [this.formData.halfyearlyScore],\n      annualScore: [this.formData.annualScore],\n    });\n  }\n\n  get studentName() {\n    return this.formGroup.get('name').value;\n  }\n\n  resetForm() {\n    this.formGroup.reset({\n      ...this.formData\n    });\n  }\n\n  onSubmit() {\n    console.log(this.formGroup.value);\n    this.updateformData.emit(this.formGroup.value);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-sm\\\">\\n  <div class=\\\"card rounded-0\\\">\\n    <div class=\\\"card-header\\\">\\n      Grid<button class=\\\"btn btn-sm btn-primary pull-right\\\" (click)=\\\"add.emit()\\\">Add</button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <p-table [value]=\\\"students$ | async\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <tr>\\n            <th>Name</th>\\n            <th>Sex</th>\\n            <th>Standard</th>\\n            <th>Quaterly %</th>\\n            <th>Halfyearly %</th>\\n            <th>Annual %</th>\\n            <th>Action</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-student>\\n          <tr>\\n            <td>{{student.name}}</td>\\n            <td>{{student.sex}}</td>\\n            <td>{{student.standard}}</td>\\n            <td>{{student.quarterlyScore}}/100</td>\\n            <td>{{student.halfyearlyScore}}/100</td>\\n            <td>{{student.annualScore}}/100</td>\\n            <td>\\n              <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"edit.emit(student.id)\\\">Edit</button>\\n              &nbsp;|&nbsp;\\n              <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"delete.emit(student.id)\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"emptymessage\\\" let-columns>\\n          <tr>\\n            <td [attr.colspan]=\\\"7\\\">\\n              No records found\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </p-table>\\n    </div>\\n  </div>\\n</div>\"","import {\n  Component, Input, OnInit,\n  ChangeDetectionStrategy, Output, EventEmitter\n} from '@angular/core';\nimport { ID } from '@datorama/akita';\nimport { Observable } from 'rxjs';\nimport { Student } from '../state/student.model';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridComponent implements OnInit {\n  @Input() students$: Observable<Array<Student>>;\n  @Output() add: EventEmitter<void> = new EventEmitter<void>();\n  @Output() edit: EventEmitter<ID> = new EventEmitter<ID>();\n  @Output() delete: EventEmitter<ID> = new EventEmitter<ID>();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.students$.subscribe(d => console.log(d));\n  }\n\n}\n","module.exports = \".username {\\r\\n    color: azure;\\r\\n    font-weight: bold;\\r\\n    padding-right: 12px;\\r\\n}\\r\\n\\r\\n.nav-username {\\r\\n    line-height: 28.2px;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\">\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Dashboard</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item nav-username\\\">\\n        <span class=\\\"username\\\">{{sessionQuery.loggedInUser$ | async}}</span>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"logout()\\\">Log out</button>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../login/login.service';\nimport { SessionQuery } from '../../login/state/index';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(\n    private loginService: LoginService,\n    public sessionQuery: SessionQuery\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    if (confirm('Are you sure to log out?')) {\n      this.loginService.logout();\n    }\n  }\n\n}\n","export * from './student.model';\r\nexport * from './student.store';\r\nexport * from './student.query';\r\nexport * from './student.service';\r\n","import { Injectable } from '@angular/core';\nimport { timer, Observable } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { Student } from './student.model';\nimport { guid } from '@datorama/akita';\n\nconst students: Array<Student> = [\n  {\n    id: guid(),\n    name: 'Mohan Ram',\n    sex: 'Male',\n    standard: 12,\n    quarterlyScore: 80,\n    halfyearlyScore: 76,\n    annualScore: 89\n  },\n  {\n    id: guid(),\n    name: 'Sowmiya',\n    sex: 'Female',\n    standard: 11,\n    quarterlyScore: 90,\n    halfyearlyScore: 94,\n    annualScore: 97\n  },\n  {\n    id: guid(),\n    name: 'Suresh',\n    sex: 'Male',\n    standard: 8,\n    quarterlyScore: 56,\n    halfyearlyScore: 54,\n    annualScore: 58\n  },\n  {\n    id: guid(),\n    name: 'Rithika',\n    sex: 'Female',\n    standard: 4,\n    quarterlyScore: 87,\n    halfyearlyScore: 67,\n    annualScore: 78\n  }\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentDataService {\n\n  constructor() { }\n\n  getStudents(): Observable<Array<Student>> {\n    return timer(200).pipe(mapTo(students));\n  }\n}\n","import { ID, guid } from '@datorama/akita';\r\n\r\nexport interface Student {\r\n    id: ID;\r\n    name: string;\r\n    sex: 'Male' | 'Female';\r\n    standard: number;\r\n    quarterlyScore: number;\r\n    halfyearlyScore: number;\r\n    annualScore: number;\r\n}\r\n\r\nexport function createStudent({\r\n    name = '',\r\n    standard = null,\r\n    sex = null,\r\n    quarterlyScore = 0,\r\n    halfyearlyScore = 0,\r\n    annualScore = 0\r\n}: Partial<Student>): Student {\r\n    return {\r\n        id: guid(),\r\n        name,\r\n        sex,\r\n        standard,\r\n        quarterlyScore,\r\n        halfyearlyScore,\r\n        annualScore\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity, ID } from '@datorama/akita';\r\nimport { Student } from './student.model';\r\nimport { StudentState, StudentStore } from './student.store';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StudentQuery extends QueryEntity<StudentState, Student> {\r\n\r\n    students$ = this.selectAll();\r\n    studentsGraphData$ = this.selectAll().pipe(\r\n        map(this.getStudentGraphData.bind(this))\r\n    );\r\n\r\n    constructor(protected store: StudentStore) {\r\n        super(store);\r\n    }\r\n\r\n    getStudent(id: ID) {\r\n        return this.getEntity(id);\r\n    }\r\n\r\n    getStudentGraphData(students: Array<Student>): { [key: string]: Array<string | number> } {\r\n        let names = [];\r\n        let quarterly = [];\r\n        let halfyearly = [];\r\n        let annual = [];\r\n        students.forEach(s => {\r\n            names = [...names, s.name];\r\n            quarterly = [...quarterly, s.quarterlyScore];\r\n            halfyearly = [...halfyearly, s.halfyearlyScore];\r\n            annual = [...annual, s.annualScore];\r\n        });\r\n        return {\r\n            names,\r\n            quarterly,\r\n            halfyearly,\r\n            annual\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { noop, ID } from '@datorama/akita';\nimport { StudentStore } from './student.store';\nimport { StudentQuery } from './student.query';\nimport { StudentDataService } from './student-data.service';\nimport { Student } from './student.model';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(\n    private studentDataService: StudentDataService,\n    private studentStore: StudentStore,\n    private studentQuery: StudentQuery\n  ) { }\n\n  getStudents(): Observable<Array<Student>> {\n    const request = this.studentDataService.getStudents().pipe(\n      tap(s => this.studentStore.set(s))\n    );\n    return this.studentQuery.isPristine ? request : noop(); // request\n  }\n\n  deleteStudent(id: ID) {\n    this.studentStore.remove(id);\n  }\n\n  updateStudent(student: Student) {\n    this.studentStore.createOrReplace(student.id, { ...student });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Student } from './student.model';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\n\r\nexport interface StudentState extends EntityState<Student> {\r\n\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n@StoreConfig({\r\n    name: 'students'\r\n})\r\nexport class StudentStore extends EntityStore<StudentState, Student> {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { timer, throwError, Observable } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { User } from './state/index';\n\nconst user: User = {\n  firstName: 'Mohan Ram',\n  lastName: 'Ratnakumar',\n  token: 'ab123abde'\n};\n\ninterface Credentials {\n  username: string;\n  password: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginDataService {\n\n  constructor() { }\n\n  getUser(cred: Credentials): Observable<User> {\n    return (cred.username === 'admin' && cred.password === 'admin')\n      ? timer(300).pipe(mapTo(user)) :\n      throwError('Invalid username or password');\n  }\n}\n","module.exports = \".login {\\r\\n    padding-top: 10%;\\r\\n}\\r\\n\\r\\n.btn:disabled {\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n\\r\\ninput.ng-invalid.ng-dirty {\\r\\n    border: 1px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row login\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <!-- form card login -->\\n      <div class=\\\"card rounded-0\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"mb-0\\\">Login</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\">Username</label>\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm rounded-0\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"admin\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control form-control-sm rounded-0\\\" name=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"admin\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm float-right\\\" id=\\\"btnLogin\\\" [disabled]=\\\"formGroup.invalid\\\">Login</button>\\n          </form>\\n        </div>\\n        <!--/card-block-->\\n      </div>\\n      <!-- /form card login -->\\n    </div>\\n  </div>\\n  <!--/row-->\\n</div>\\n<!--/container-->\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  resetForm() {\n    this.formGroup.reset();\n  }\n\n  onSubmit() {\n    this.loginService.login(this.formGroup.value).subscribe({\n      error: (e) => {\n        alert(e);\n        this.resetForm();\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { LoginDataService } from './login-data.service';\nimport { User, SessionStore } from './state/index';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private loginDataService: LoginDataService,\n    private sessionStore: SessionStore,\n    private router: Router\n  ) { }\n\n  login(cred) {\n    return this.loginDataService.getUser(cred).pipe(\n      tap(d => console.log(d)),\n      tap(d => this.sessionStore.login(d as User)),\n      tap((d) => this.router.navigate(['/']))\n    );\n  }\n\n  logout() {\n    this.sessionStore.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","export * from './session.model';\r\nexport * from './session.store';\r\nexport * from './session.query';\r\n","export interface User {\r\n    firstName: string;\r\n    lastName: string;\r\n    token: string;\r\n}\r\n\r\nexport interface Session {\r\n    user: User | null;\r\n}\r\n\r\n/* {\r\n    firstName: 'Mohan Ram',\r\n    lastName: 'Ratnakumar',\r\n    token: 'ab123abde'\r\n} */\r\nexport const initialSessionState: Session = {\r\n    user: null\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Query, toBoolean } from '@datorama/akita';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Session } from './session.model';\r\nimport { SessionStore } from './session.store';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SessionQuery extends Query<Session> {\r\n\r\n    isLoggedIn$ = this.select(({ user }) => toBoolean(user));\r\n\r\n    loggedInUser$ = this.select().pipe(\r\n        filter(({ user }) => toBoolean(user)),\r\n        map(({ user: { firstName: f, lastName: l } }) => `${f} ${l}`)\r\n    );\r\n\r\n    constructor(protected store: SessionStore) {\r\n        super(store);\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return toBoolean(this.getSnapshot().user);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store, StoreConfig } from '@datorama/akita';\r\n\r\nimport { Session, initialSessionState, User } from './session.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n@StoreConfig({ name: 'session' })\r\nexport class SessionStore extends Store<Session> {\r\n\r\n    constructor() {\r\n        super(initialSessionState);\r\n    }\r\n\r\n    login(user: User) {\r\n        this.update({ user });\r\n    }\r\n\r\n    logout() {\r\n        this.update(initialSessionState);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableAkitaProdMode } from '@datorama/akita';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  enableAkitaProdMode(); // In dev mode, Akita will deep freeze the store's value to avoid store mutations.\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}